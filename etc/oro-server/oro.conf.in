###############################################################################
#     Global configuration file for the ORO cognitive kernel (oro-server)     #
###############################################################################

################################# General #####################################

# verbosity (default: info): set the level of verbosity during server 
# execution. Options include:
# - debug: all infos outputed by the server are displayed.
# - info: all infos except debug infos are displayed.
# - important: only important informations are displayed.
# - serious_error: only errors requiring intervention on the server are displayed.
# - silent: nothing at all is displayed.

verbosity = info

################################ External modules ##############################

# plugins_path: path where ORO must look for plugins (JAR files).

plugins_path = @PLUGINS_PATH@

################################# Ontology #####################################

# oro_common_sense: should point to the OWL ontology where "common sense" 
# knowledge is stored. This sum of facts, rules, relationships form the ground 
# of knowledge used by the cognitive kernel (including the reasonner).

oro_common_sense = @ONTOLOGIES_PATH@/commonsense.oro.owl

# oro_robot_instance: this ontology file stores robot specific knowledge,
# including the facts that the robot will infer.
# You can provide some generic, robot-related, knowledge (and rules), but you
# can as well remove this option. In this case, a blank ontology will be 
# created during the oro-server initialization.

oro_robot_instance = @ONTOLOGIES_PATH@/robot.oro.owl

# oro_agent_instance: this ontology file stores specific knowledge relevant
# to a generic agent.
# It is used as base for cognitive models of agents when they appear.

oro_agent_instance = @ONTOLOGIES_PATH@/agent.oro.owl

# oro_scenario: should point to the OWL file used as storage for knowledge
# related to a specific scenario.
# These instances describe the a priori knowledge available to the robot. You 
# can safely remove this option if you don't have scenario-specific knowledge.

#oro_scenario = @ONTOLOGIES_PATH@/scenarios/jidology.owl

################################ Reasonner ####################################

# reasonner (default: jena_internal_owl_rule): define the reasonner the 
# ontology server will use.
# Available reasonners are:
#  * jena_internal_rdfs (the OWL_DL_MEM_RDFS_INF OntModelSpec), 
#  * jena_internal_owl_rule (OWL_DL_MEM_RULE_INF), 
#  * pellet (PelletReasonerFactory.THE_SPEC)

reasonner = pellet


############################## Server-specific #################################

#defines the server port, defaulted to 6969

port = 6969

#defines the maximum amount of inactivity time (in seconds) allowed to clients
# before the server closes the connection.
#By default, 60 seconds.
keep_alive_socket_duration = 6000


############################# Less-used options ################################

# language (default: en): sets the default language used for retrieval of
# labels when several translations are available.

language = en

#list the shortcuts for namespaces. Up to 10 namespaces can be specified.
#the shortname must be separated from namespace by '::'.

namespace1 = oro::http://www.laas.fr/~slemaign/onto/openrobots#
#namespace1 = cyc::http://sw.opencyc.org/concept/
#namespace2 = oro::http://ias.cs.tum.edu/kb/commonsense.owl#

#default namespace: set the default namespace.

default_namespace = oro

################################################################################
blingbling = false
