###############################################################################
#     Global configuration file for the ORO cognitive kernel (oro-server)     #
###############################################################################

################################# General #####################################

# verbosity (default: info): set the level of verbosity during server 
# execution. Options include:
# - debug: all infos outputed by the server are displayed.
# - info: all infos except debug infos are displayed.
# - important: only important informations are displayed.
# - serious_error: only errors requiring intervention on the server are displayed.
# - silent: nothing at all is displayed.

verbosity = info

# language (default: en): sets the default language used for retrieval of
# labels when several translations are available.

language = en

############################# Available services ##############################

## Module EVENT MANAGER
# Removed since 0.6.0 - To be re-introducted

enable_eventmanager = false


## Module CURIOSITY
# Not yet implemented

enable_curiosity = false

## Module MEMORY MANAGER
# This module is in charge of "forgetting" old statements and enable 
# reinforcement learning (well, this last feature is not yet implemented)

enable_memorymanager = true

################################ Ontology #####################################

# oro_common_sense: should point to the OWL ontology where "common sense" 
# knowledge is stored. This sum of facts, rules, relationships form the ground 
# of knowledge used by the cognitive kernel (including the reasonner).

oro_common_sense = /home/slemaign/softs-local/oro/commonsense.oro.owl
#oro_common_sense = /home/slemaign/softs-local/oro/testsuite.oro.owl

# oro_robot_instance: this ontology file stores robot specific knowledge,
# including the facts that the robot will infer.
# You can provide some generic, robot-related, knowledge (and rules), but you
# can as well remove this option. In this case, a blank ontology will be 
# created during the oro-server initialization.

oro_robot_instance = /home/slemaign/softs-local/oro/robot.oro.owl

# oro_scenario: should point to the OWL file used as storage for knowledge
# related to a specific scenario.
# These instances describe the a priori knowledge available to the robot. You 
# can safely remove this option if you don't have scenario-specific knowledge.

oro_scenario = /home/slemaign/softs-local/oro/scenarios/jidology.owl


#default namespace: set the default namespace. Don't forget the trailing #!

default_namespace = http://www.laas.fr/~slemaign/onto/openrobots#

# short_namespaces (default: true): if true, the ontology engine will return 
# resource with prefix instead of full URI when possible, or nothing if the
# resource is in the default namespace.

short_namespaces = true


################################ Reasonner ####################################

# reasonner (default: jena_internal_owl_rule): define the reasonner the 
# ontology server will use.
# Available reasonners are:
#  * jena_internal_rdfs (the OWL_DL_MEM_RDFS_INF OntModelSpec), 
#  * jena_internal_owl_rule (OWL_DL_MEM_RULE_INF), 
#  * pellet (PelletReasonerFactory.THE_SPEC)

reasonner = pellet


############################## Server-specific ################################

#defines the server port, defaulted to 6969

port = 6969


#defines the maximum amount of inactivity time (in seconds) allowed to clients
# before the server closes the connection.
#By default, 60 seconds.
keep_alive_socket_duration = 6000
