/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class IControlLimits {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected IControlLimits(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(IControlLimits obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      yarpJNI.delete_IControlLimits(swigCPtr);
    }
    swigCPtr = 0;
  }

  public boolean setLimits(int axis, double min, double max) {
    return yarpJNI.IControlLimits_setLimits(swigCPtr, this, axis, min, max);
  }

  public boolean getLimits(int axis, SWIGTYPE_p_double min, SWIGTYPE_p_double max) {
    return yarpJNI.IControlLimits_getLimits__SWIG_0(swigCPtr, this, axis, SWIGTYPE_p_double.getCPtr(min), SWIGTYPE_p_double.getCPtr(max));
  }

  public boolean getLimits(int axis, DVector min, DVector max) {
    return yarpJNI.IControlLimits_getLimits__SWIG_1(swigCPtr, this, axis, DVector.getCPtr(min), min, DVector.getCPtr(max), max);
  }

}
