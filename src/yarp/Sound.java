/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class Sound extends Portable {
  private long swigCPtr;

  protected Sound(long cPtr, boolean cMemoryOwn) {
    super(yarpJNI.SWIGSoundUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Sound obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      yarpJNI.delete_Sound(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public Sound(int bytesPerSample) {
    this(yarpJNI.new_Sound__SWIG_0(bytesPerSample), true);
  }

  public Sound() {
    this(yarpJNI.new_Sound__SWIG_1(), true);
  }

  public Sound(Sound alt) {
    this(yarpJNI.new_Sound__SWIG_2(Sound.getCPtr(alt), alt), true);
  }

  public void resize(int samples, int channels) {
    yarpJNI.Sound_resize__SWIG_0(swigCPtr, this, samples, channels);
  }

  public void resize(int samples) {
    yarpJNI.Sound_resize__SWIG_1(swigCPtr, this, samples);
  }

  public int get(int sample, int channel) {
    return yarpJNI.Sound_get__SWIG_0(swigCPtr, this, sample, channel);
  }

  public int get(int sample) {
    return yarpJNI.Sound_get__SWIG_1(swigCPtr, this, sample);
  }

  public void set(int value, int sample, int channel) {
    yarpJNI.Sound_set__SWIG_0(swigCPtr, this, value, sample, channel);
  }

  public void set(int value, int sample) {
    yarpJNI.Sound_set__SWIG_1(swigCPtr, this, value, sample);
  }

  public int getSafe(int sample, int channel) {
    return yarpJNI.Sound_getSafe__SWIG_0(swigCPtr, this, sample, channel);
  }

  public int getSafe(int sample) {
    return yarpJNI.Sound_getSafe__SWIG_1(swigCPtr, this, sample);
  }

  public void setSafe(int value, int sample, int channel) {
    yarpJNI.Sound_setSafe__SWIG_0(swigCPtr, this, value, sample, channel);
  }

  public void setSafe(int value, int sample) {
    yarpJNI.Sound_setSafe__SWIG_1(swigCPtr, this, value, sample);
  }

  public boolean isSample(int sample, int channel) {
    return yarpJNI.Sound_isSample__SWIG_0(swigCPtr, this, sample, channel);
  }

  public boolean isSample(int sample) {
    return yarpJNI.Sound_isSample__SWIG_1(swigCPtr, this, sample);
  }

  public int getFrequency() {
    return yarpJNI.Sound_getFrequency(swigCPtr, this);
  }

  public void setFrequency(int freq) {
    yarpJNI.Sound_setFrequency(swigCPtr, this, freq);
  }

  public int getBytesPerSample() {
    return yarpJNI.Sound_getBytesPerSample(swigCPtr, this);
  }

  public int getSamples() {
    return yarpJNI.Sound_getSamples(swigCPtr, this);
  }

  public int getChannels() {
    return yarpJNI.Sound_getChannels(swigCPtr, this);
  }

  public boolean write(ConnectionWriter connection) {
    return yarpJNI.Sound_write(swigCPtr, this, ConnectionWriter.getCPtr(connection), connection);
  }

  public SWIGTYPE_p_unsigned_char getRawData() {
    long cPtr = yarpJNI.Sound_getRawData(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public int getRawDataSize() {
    return yarpJNI.Sound_getRawDataSize(swigCPtr, this);
  }

}
