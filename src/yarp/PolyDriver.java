/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yarp;

public class PolyDriver extends DeviceDriver {
  private long swigCPtr;

  protected PolyDriver(long cPtr, boolean cMemoryOwn) {
    super(yarpJNI.SWIGPolyDriverUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PolyDriver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      yarpJNI.delete_PolyDriver(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public PolyDriver() {
    this(yarpJNI.new_PolyDriver__SWIG_0(), true);
  }

  public PolyDriver(String txt) {
    this(yarpJNI.new_PolyDriver__SWIG_1(txt), true);
  }

  public PolyDriver(Searchable config) {
    this(yarpJNI.new_PolyDriver__SWIG_2(Searchable.getCPtr(config), config), true);
  }

  public boolean open(String txt) {
    return yarpJNI.PolyDriver_open__SWIG_0(swigCPtr, this, txt);
  }

  public boolean open(Searchable config) {
    return yarpJNI.PolyDriver_open__SWIG_1(swigCPtr, this, Searchable.getCPtr(config), config);
  }

  public boolean link(PolyDriver alt) {
    return yarpJNI.PolyDriver_link(swigCPtr, this, PolyDriver.getCPtr(alt), alt);
  }

  public DeviceDriver take() {
    long cPtr = yarpJNI.PolyDriver_take(swigCPtr, this);
    return (cPtr == 0) ? null : new DeviceDriver(cPtr, false);
  }

  public boolean close() {
    return yarpJNI.PolyDriver_close(swigCPtr, this);
  }

  public boolean isValid() {
    return yarpJNI.PolyDriver_isValid(swigCPtr, this);
  }

  public Bottle getOptions() {
    return new Bottle(yarpJNI.PolyDriver_getOptions(swigCPtr, this), true);
  }

  public ConstString getComment(String option) {
    return new ConstString(yarpJNI.PolyDriver_getComment(swigCPtr, this, option), true);
  }

  public Value getDefaultValue(String option) {
    return new Value(yarpJNI.PolyDriver_getDefaultValue(swigCPtr, this, option), true);
  }

  public Value getValue(String option) {
    return new Value(yarpJNI.PolyDriver_getValue(swigCPtr, this, option), true);
  }

  public IFrameGrabberImage viewFrameGrabberImage() {
    long cPtr = yarpJNI.PolyDriver_viewFrameGrabberImage(swigCPtr, this);
    return (cPtr == 0) ? null : new IFrameGrabberImage(cPtr, false);
  }

  public IPositionControl viewIPositionControl() {
    long cPtr = yarpJNI.PolyDriver_viewIPositionControl(swigCPtr, this);
    return (cPtr == 0) ? null : new IPositionControl(cPtr, false);
  }

  public IVelocityControl viewIVelocityControl() {
    long cPtr = yarpJNI.PolyDriver_viewIVelocityControl(swigCPtr, this);
    return (cPtr == 0) ? null : new IVelocityControl(cPtr, false);
  }

  public IEncoders viewIEncoders() {
    long cPtr = yarpJNI.PolyDriver_viewIEncoders(swigCPtr, this);
    return (cPtr == 0) ? null : new IEncoders(cPtr, false);
  }

  public IPidControl viewIPidControl() {
    long cPtr = yarpJNI.PolyDriver_viewIPidControl(swigCPtr, this);
    return (cPtr == 0) ? null : new IPidControl(cPtr, false);
  }

  public IAmplifierControl viewIAmplifierControl() {
    long cPtr = yarpJNI.PolyDriver_viewIAmplifierControl(swigCPtr, this);
    return (cPtr == 0) ? null : new IAmplifierControl(cPtr, false);
  }

  public IControlLimits viewIControlLimits() {
    long cPtr = yarpJNI.PolyDriver_viewIControlLimits(swigCPtr, this);
    return (cPtr == 0) ? null : new IControlLimits(cPtr, false);
  }

}
