###############################################
# Global configuration file for the ORO tools #
###############################################

#### General ####

#verbose (default: true): if set to false, the server won't display any informations during exectuion.
verbose = true

#### Ontology ####

#ontology: should point to the OWL (or possibly RDF) file used as ontology base. The path is relative to the working directory.
ontology = ../oro/openrobots.owl
#ontology = ../oro/oro_test.owl

#instances: should point to the OWL (or possibly RDF) file used as storage for base instances. The path is relative to the working directory.
# These instances describe the a priori knowledge available to the robot.
instances = ../oro/jidology.owl

#default namespace: set the default namespace. Don't forget the trailing #!
default_namespace = http://www.laas.fr/~slemaign/onto/openrobots.owl#

#short namespaces (default: true): if true, the ontology engine will return resource
#with prefix instead of full URI, or nothing if the resource is in the default namespace.
short_namespaces = true

#### Reasonner ####

#reasonner (default: jena_internal_owl_rule): define the reasonner the ontology server will use.
#Available reasonners are:
#  * jena_internal_rdfs (the OWL_DL_MEM_RDFS_INF OntModelSpec), 
#  * jena_internal_owl_rule (OWL_DL_MEM_RULE_INF), 
#  * pellet (PelletReasonerFactory.THE_SPEC)
reasonner = jena_internal_owl_rule


#### Server ####

#defines which bindings the onto server does offer. If set to anything different from "enabled", the binding won't be loaded.
#currently, only YARP is supported. 
yarp = enabled

#### YARP specific ####

#YARP server port (default: oro): set the name of the YARP port where queries and answer will be exchanged with the ontology server.
#Queries must be sent to the port name suffixed by "/in" (for instance, "/oro/in")
#Answers will be available on the port name suffixed by "/out" (for instance, "/oro/out")
yarp_input_port = oro
